AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS CloudFormation template for Amazon OpenSearch Service domain (photoscf) with t3.small.search instance type"

Resources:
  PhotosCFDomain:
    Type: "AWS::OpenSearchService::Domain"
    Properties:
      AdvancedSecurityOptions:
        Enabled: true
        InternalUserDatabaseEnabled: false
        MasterUserOptions: {
          MasterUserARN: arn:aws:iam::857213095760:role/service-role/index-photos-LF1
        }
      NodeToNodeEncryptionOptions:
        Enabled: true
      EncryptionAtRestOptions:
        Enabled: true
      DomainEndpointOptions:
        EnforceHTTPS: true
      DomainName: "photoscf"
      EngineVersion: "OpenSearch_2.5"
      ClusterConfig:
        InstanceType: "t3.small.search"
        InstanceCount: 1
      EBSOptions:
        EBSEnabled: true
        VolumeType: "gp3"
        VolumeSize: 10
      SnapshotOptions:
        AutomatedSnapshotStartHour: 0
      AccessPolicies:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: 'arn:aws:iam::857213095760:user/opensearch_user'
            Action: "es:*"
            Resource: !Sub 'arn:aws:es:us-east-1:857213095760:domain/photoscf/*'
  
  S3Bucket1:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
      BucketName: "hw2bucket1fuxy"
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  S3Bucket2:
    Type: 'AWS::S3::Bucket'
    DependsOn:
      - S3Permission
    Properties:
      AccessControl: PublicRead
      BucketName: "hw2bucket2fuxy"
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:Put
            Function: !GetAtt indexPhoto.Arn
  
  S3Permission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref indexPhoto
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount: '857213095760'
      SourceArn: "arn:aws:s3:::hw2bucket2fuxy"
  
  indexPhoto:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.9
      Role: arn:aws:iam::857213095760:role/service-role/index-photos-LF1
      Handler: lambda_function.lambda_handler
      Code:
        S3Bucket: codeforlf1
        S3Key: index-photos-947cf284-93a0-4792-9b67-b3b33d5b3d32.zip

  searchPhoto:
    Type: 'AWS::Lambda::Function'
    Properties:
      Runtime: python3.9
      Role: arn:aws:iam::857213095760:role/service-role/search-photos-role-p8hhgwlj
      Handler: lambda_function.lambda_handler
      Code:
        S3Bucket: codeforlf1
        S3Key: search-photos-96d76cee-6d49-4fcd-b04b-8ad10c96bf58.zip
  
  photoAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: 'photoSearch'
      Body:
        swagger: "2.0"
        info:
          description: "AI Photo Search application, built during the Cloud and Big Data course\
            \ at Columbia University."
          version: "1.0.0"
          title: "AI Photo Search"
        host: "q2msd1wqvh.execute-api.us-east-1.amazonaws.com"
        basePath: "/stage1"
        schemes:
        - "https"
        paths:
          /search:
            get:
              operationId: "searchPhotos"
              produces:
              - "application/json"
              parameters:
              - name: "q"
                in: "query"
                required: false
                type: "string"
              responses:
                "200":
                  description: "200 response"
                  schema:
                    $ref: "#/definitions/SearchResponse"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                "500":
                  description: "500 response"
                  schema:
                    $ref: "#/definitions/Error"
                "403":
                  description: "403 response"
                  schema:
                    $ref: "#/definitions/Error"
            options:
              consumes:
              - "application/json"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"
          /upload:
            options:
              consumes:
              - "application/json"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"
          /upload/{object}:
            put:
              parameters:
              - name: "Content-Type"
                in: "header"
                required: false
                type: "string"
              - name: "object"
                in: "path"
                required: true
                type: "string"
              - name: "x-amz-meta-customLabels"
                in: "header"
                required: false
                type: "string"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
            options:
              consumes:
              - "application/json"
              parameters:
              - name: "object"
                in: "path"
                required: true
                type: "string"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"
        definitions:
          Error:
            type: "object"
            properties:
              code:
                type: "integer"
                format: "int32"
              message:
                type: "string"
          Photo:
            type: "object"
            properties:
              url:
                type: "string"
              labels:
                type: "array"
                items:
                  type: "string"
          SearchResponse:
            type: "object"
            properties:
              results:
                type: "array"
                items:
                  $ref: "#/definitions/Photo"

  
  

